-- bool.mt

-- let data Bool = True | False
--
-- in  if True then One else Zero

(   λ (Bool : *)
->  λ (True  : Bool)
->  λ (False : Bool)
->  λ (if : Bool -> π (r : *) -> r -> r -> r)
->  λ (Int  : *)
->  λ (Zero : Int)
->  λ (One  : Int)
->  if True Int One Zero
)

-- Bool
(π (r : *) -> r -> r -> r)

-- True
(λ (r : *) -> λ (x : r) -> λ (_ : r) -> x)

-- False
(λ (r : *) -> λ (_ : r) -> λ (x : r) -> x)

-- if
(λ (b : π (r : *) -> r -> r -> r) -> b)
